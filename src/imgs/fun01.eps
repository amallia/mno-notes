%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, April 3, 2011 6:56:52 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
7.50000 6.01573 380.494 376.484 rc
newpath
71.3873 -7.86709 m
90.7692 87.3450 l
110.992 152.681 l
129.563 192.409 l
149.594 220.906 l
170.401 240.119 l
188.514 251.171 l
208.076 259.187 l
228.285 264.622 l
248.056 268.103 l
267.186 270.331 l
288.426 271.947 l
307.511 272.893 l
327.888 273.558 l
346.353 273.957 l
366.541 274.247 l
385.535 274.427 l
405.390 274.551 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
362.401 274.790 m
362.401 277.390 l
S
newpath
315.214 274.790 m
315.214 277.390 l
S
newpath
268.027 274.790 m
268.027 277.390 l
S
newpath
220.840 274.790 m
220.840 277.390 l
S
newpath
173.654 274.790 m
173.654 277.390 l
S
newpath
126.467 274.790 m
126.467 277.390 l
S
newpath
79.2802 274.790 m
79.2802 277.390 l
S
newpath
32.0934 274.790 m
32.0934 277.390 l
S
newpath
8.50000 274.790 m
385.994 274.790 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
261 298 14 15 rc
newpath
267.250 304.250 m
267.458 304.468 267.614 304.692 267.718 304.921  c
267.802 305.067 267.927 305.463 268.093 306.109  c
268.656 305.281 l
268.802 305.072 268.981 304.877 269.195 304.695  c
269.408 304.513 269.593 304.385 269.750 304.312  c
269.854 304.270 269.968 304.250 270.093 304.250  c
270.270 304.250 270.414 304.299 270.523 304.398  c
270.632 304.497 270.687 304.614 270.687 304.750  c
270.687 304.916 270.656 305.031 270.593 305.093  c
270.479 305.197 270.343 305.250 270.187 305.250  c
270.093 305.250 270.000 305.229 269.906 305.187  c
269.708 305.125 269.572 305.093 269.500 305.093  c
269.395 305.093 269.276 305.151 269.140 305.265  c
268.880 305.484 268.567 305.911 268.203 306.546  c
268.718 308.718 l
268.802 309.052 268.869 309.252 268.921 309.320  c
268.974 309.388 269.031 309.421 269.093 309.421  c
269.177 309.421 269.281 309.375 269.406 309.281  c
269.635 309.083 269.833 308.828 270.000 308.515  c
270.218 308.625 l
269.947 309.125 269.609 309.541 269.203 309.875  c
268.974 310.062 268.776 310.156 268.609 310.156  c
268.369 310.156 268.182 310.020 268.046 309.750  c
267.953 309.583 267.770 308.875 267.500 307.625  c
266.833 308.770 266.302 309.505 265.906 309.828  c
265.645 310.046 265.395 310.156 265.156 310.156  c
264.989 310.156 264.833 310.093 264.687 309.968  c
264.593 309.875 264.546 309.750 264.546 309.593  c
264.546 309.458 264.593 309.343 264.687 309.250  c
264.781 309.156 264.895 309.109 265.031 309.109  c
265.166 309.109 265.307 309.177 265.453 309.312  c
265.567 309.406 265.656 309.453 265.718 309.453  c
265.760 309.453 265.822 309.421 265.906 309.359  c
266.104 309.192 266.375 308.843 266.718 308.312  c
267.062 307.781 267.286 307.395 267.390 307.156  c
267.130 306.125 266.989 305.583 266.968 305.531  c
266.875 305.250 266.750 305.052 266.593 304.937  c
266.437 304.822 266.203 304.765 265.890 304.765  c
265.796 304.765 265.687 304.770 265.562 304.781  c
265.562 304.546 l
267.250 304.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
8.50000 274.790 m
8.50000 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 287 7 13 rc
newpath
16.7968 294.437 m
8.20312 294.437 l
8.20312 293.765 l
16.7968 293.765 l
16.7968 294.437 l
h
f
Q
newpath
15.6562 291.031 m
15.9062 290.447 16.2187 290.000 16.5937 289.687  c
16.9687 289.375 17.4322 289.218 17.9843 289.218  c
18.6822 289.218 19.2135 289.442 19.5781 289.890  c
19.8593 290.224 20.0000 290.578 20.0000 290.953  c
20.0000 291.588 19.6041 292.239 18.8125 292.906  c
19.3437 293.114 19.7447 293.411 20.0156 293.796  c
20.2864 294.182 20.4218 294.635 20.4218 295.156  c
20.4218 295.895 20.1822 296.536 19.7031 297.078  c
19.0885 297.796 18.1979 298.156 17.0312 298.156  c
16.4479 298.156 16.0520 298.083 15.8437 297.937  c
15.6354 297.791 15.5312 297.635 15.5312 297.468  c
15.5312 297.343 15.5807 297.237 15.6796 297.148  c
15.7786 297.059 15.8958 297.015 16.0312 297.015  c
16.1354 297.015 16.2447 297.031 16.3593 297.062  c
16.4322 297.083 16.5963 297.158 16.8515 297.289  c
17.1067 297.419 17.2812 297.500 17.3750 297.531  c
17.5312 297.572 17.6979 297.593 17.8750 297.593  c
18.3020 297.593 18.6770 297.427 19.0000 297.093  c
19.3229 296.760 19.4843 296.364 19.4843 295.906  c
19.4843 295.572 19.4114 295.250 19.2656 294.937  c
19.1510 294.697 19.0260 294.515 18.8906 294.390  c
18.7135 294.224 18.4661 294.072 18.1484 293.937  c
17.8307 293.802 17.5052 293.734 17.1718 293.734  c
16.9687 293.734 l
16.9687 293.531 l
17.3020 293.489 17.6380 293.369 17.9765 293.171  c
18.3151 292.974 18.5599 292.737 18.7109 292.460  c
18.8619 292.184 18.9375 291.875 18.9375 291.531  c
18.9375 291.104 18.8020 290.755 18.5312 290.484  c
18.2604 290.213 17.9218 290.078 17.5156 290.078  c
16.8593 290.078 16.3125 290.427 15.8750 291.125  c
15.6562 291.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.6868 274.790 m
55.6868 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 287 7 13 rc
newpath
63.7968 294.437 m
55.2031 294.437 l
55.2031 293.765 l
63.7968 293.765 l
63.7968 294.437 l
h
f
Q
newpath
67.9531 296.343 m
67.3593 298.000 l
62.2812 298.000 l
62.2812 297.765 l
63.7708 296.401 64.8203 295.286 65.4296 294.421  c
66.0390 293.557 66.3437 292.770 66.3437 292.062  c
66.3437 291.510 66.1770 291.059 65.8437 290.710  c
65.5104 290.362 65.1093 290.187 64.6406 290.187  c
64.2239 290.187 63.8463 290.309 63.5078 290.554  c
63.1692 290.799 62.9218 291.161 62.7656 291.640  c
62.5312 291.640 l
62.6354 290.859 62.9062 290.260 63.3437 289.843  c
63.7812 289.427 64.3281 289.218 64.9843 289.218  c
65.6822 289.218 66.2656 289.442 66.7343 289.890  c
67.2031 290.338 67.4375 290.864 67.4375 291.468  c
67.4375 291.906 67.3333 292.343 67.1250 292.781  c
66.8125 293.468 66.3072 294.192 65.6093 294.953  c
64.5572 296.109 63.8958 296.807 63.6250 297.046  c
65.8750 297.046 l
66.3333 297.046 66.6536 297.028 66.8359 296.992  c
67.0182 296.955 67.1849 296.885 67.3359 296.781  c
67.4869 296.677 67.6145 296.531 67.7187 296.343  c
67.9531 296.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.873 274.790 m
102.873 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 287 7 13 rc
newpath
110.796 294.437 m
102.203 294.437 l
102.203 293.765 l
110.796 293.765 l
110.796 294.437 l
h
f
Q
newpath
110.531 290.234 m
112.625 289.218 l
112.828 289.218 l
112.828 296.484 l
112.828 296.963 112.849 297.263 112.890 297.382  c
112.932 297.502 113.015 297.593 113.140 297.656  c
113.265 297.718 113.520 297.755 113.906 297.765  c
113.906 298.000 l
110.671 298.000 l
110.671 297.765 l
111.078 297.755 111.341 297.718 111.460 297.656  c
111.580 297.593 111.664 297.510 111.710 297.406  c
111.757 297.302 111.781 296.994 111.781 296.484  c
111.781 291.843 l
111.781 291.208 111.760 290.802 111.718 290.625  c
111.687 290.489 111.632 290.390 111.554 290.328  c
111.476 290.265 111.380 290.234 111.265 290.234  c
111.109 290.234 110.895 290.302 110.625 290.437  c
110.531 290.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 274.790 m
150.060 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
147.468 291.750 m
147.468 290.770 147.617 289.924 147.914 289.210  c
148.210 288.497 148.604 287.968 149.093 287.625  c
149.479 287.354 149.875 287.218 150.281 287.218  c
150.937 287.218 151.526 287.552 152.046 288.218  c
152.703 289.052 153.031 290.182 153.031 291.609  c
153.031 292.609 152.888 293.458 152.601 294.156  c
152.315 294.854 151.947 295.362 151.500 295.679  c
151.052 295.997 150.625 296.156 150.218 296.156  c
149.395 296.156 148.708 295.671 148.156 294.703  c
147.697 293.880 147.468 292.895 147.468 291.750  c
h
148.718 291.906 m
148.718 293.093 148.864 294.062 149.156 294.812  c
149.395 295.437 149.755 295.750 150.234 295.750  c
150.463 295.750 150.700 295.648 150.945 295.445  c
151.190 295.242 151.375 294.895 151.500 294.406  c
151.697 293.687 151.796 292.661 151.796 291.328  c
151.796 290.349 151.692 289.531 151.484 288.875  c
151.338 288.385 151.140 288.041 150.890 287.843  c
150.724 287.708 150.515 287.640 150.265 287.640  c
149.984 287.640 149.729 287.765 149.500 288.015  c
149.197 288.369 148.992 288.924 148.882 289.679  c
148.773 290.434 148.718 291.177 148.718 291.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.247 274.790 m
197.247 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
200.531 290.234 m
202.625 289.218 l
202.828 289.218 l
202.828 296.484 l
202.828 296.963 202.849 297.263 202.890 297.382  c
202.932 297.502 203.015 297.593 203.140 297.656  c
203.265 297.718 203.520 297.755 203.906 297.765  c
203.906 298.000 l
200.671 298.000 l
200.671 297.765 l
201.078 297.755 201.341 297.718 201.460 297.656  c
201.580 297.593 201.664 297.510 201.710 297.406  c
201.757 297.302 201.781 296.994 201.781 296.484  c
201.781 291.843 l
201.781 291.208 201.760 290.802 201.718 290.625  c
201.687 290.489 201.632 290.390 201.554 290.328  c
201.476 290.265 201.380 290.234 201.265 290.234  c
201.109 290.234 200.895 290.302 200.625 290.437  c
200.531 290.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
244.434 274.790 m
244.434 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
251.953 296.343 m
251.359 298.000 l
246.281 298.000 l
246.281 297.765 l
247.770 296.401 248.820 295.286 249.429 294.421  c
250.039 293.557 250.343 292.770 250.343 292.062  c
250.343 291.510 250.177 291.059 249.843 290.710  c
249.510 290.362 249.109 290.187 248.640 290.187  c
248.224 290.187 247.846 290.309 247.507 290.554  c
247.169 290.799 246.921 291.161 246.765 291.640  c
246.531 291.640 l
246.635 290.859 246.906 290.260 247.343 289.843  c
247.781 289.427 248.328 289.218 248.984 289.218  c
249.682 289.218 250.265 289.442 250.734 289.890  c
251.203 290.338 251.437 290.864 251.437 291.468  c
251.437 291.906 251.333 292.343 251.125 292.781  c
250.812 293.468 250.307 294.192 249.609 294.953  c
248.557 296.109 247.895 296.807 247.625 297.046  c
249.875 297.046 l
250.333 297.046 250.653 297.028 250.835 296.992  c
251.018 296.955 251.184 296.885 251.335 296.781  c
251.487 296.677 251.614 296.531 251.718 296.343  c
251.953 296.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
291.621 274.790 m
291.621 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
293.656 291.031 m
293.906 290.447 294.218 290.000 294.593 289.687  c
294.968 289.375 295.432 289.218 295.984 289.218  c
296.682 289.218 297.213 289.442 297.578 289.890  c
297.859 290.224 298.000 290.578 298.000 290.953  c
298.000 291.588 297.604 292.239 296.812 292.906  c
297.343 293.114 297.744 293.411 298.015 293.796  c
298.286 294.182 298.421 294.635 298.421 295.156  c
298.421 295.895 298.182 296.536 297.703 297.078  c
297.088 297.796 296.197 298.156 295.031 298.156  c
294.447 298.156 294.052 298.083 293.843 297.937  c
293.635 297.791 293.531 297.635 293.531 297.468  c
293.531 297.343 293.580 297.237 293.679 297.148  c
293.778 297.059 293.895 297.015 294.031 297.015  c
294.135 297.015 294.244 297.031 294.359 297.062  c
294.432 297.083 294.596 297.158 294.851 297.289  c
295.106 297.419 295.281 297.500 295.375 297.531  c
295.531 297.572 295.697 297.593 295.875 297.593  c
296.302 297.593 296.677 297.427 297.000 297.093  c
297.322 296.760 297.484 296.364 297.484 295.906  c
297.484 295.572 297.411 295.250 297.265 294.937  c
297.151 294.697 297.026 294.515 296.890 294.390  c
296.713 294.224 296.466 294.072 296.148 293.937  c
295.830 293.802 295.505 293.734 295.171 293.734  c
294.968 293.734 l
294.968 293.531 l
295.302 293.489 295.638 293.369 295.976 293.171  c
296.315 292.974 296.559 292.737 296.710 292.460  c
296.862 292.184 296.937 291.875 296.937 291.531  c
296.937 291.104 296.802 290.755 296.531 290.484  c
296.260 290.213 295.921 290.078 295.515 290.078  c
294.859 290.078 294.312 290.427 293.875 291.125  c
293.656 291.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
338.807 274.790 m
338.807 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
346.046 294.828 m
346.046 295.734 l
344.890 295.734 l
344.890 298.000 l
343.843 298.000 l
343.843 295.734 l
340.203 295.734 l
340.203 294.921 l
344.203 289.218 l
344.890 289.218 l
344.890 294.828 l
346.046 294.828 l
h
343.843 294.828 m
343.843 290.546 l
340.828 294.828 l
343.843 294.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 274.790 m
385.994 279.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.640 289.390 m
392.140 290.468 l
389.562 290.468 l
389.000 291.625 l
390.114 291.791 391.000 292.208 391.656 292.875  c
392.218 293.447 392.500 294.125 392.500 294.906  c
392.500 295.364 392.408 295.786 392.226 296.171  c
392.044 296.557 391.812 296.885 391.531 297.156  c
391.250 297.427 390.937 297.640 390.593 297.796  c
390.114 298.036 389.614 298.156 389.093 298.156  c
388.583 298.156 388.210 298.067 387.976 297.890  c
387.742 297.713 387.625 297.520 387.625 297.312  c
387.625 297.187 387.674 297.080 387.773 296.992  c
387.872 296.903 387.994 296.859 388.140 296.859  c
388.244 296.859 388.338 296.875 388.421 296.906  c
388.505 296.937 388.645 297.026 388.843 297.171  c
389.166 297.390 389.489 297.500 389.812 297.500  c
390.312 297.500 390.747 297.312 391.117 296.937  c
391.487 296.562 391.671 296.104 391.671 295.562  c
391.671 295.041 391.505 294.557 391.171 294.109  c
390.838 293.661 390.380 293.312 389.796 293.062  c
389.328 292.875 388.697 292.765 387.906 292.734  c
389.562 289.390 l
392.640 289.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
150.060 34.6932 m
147.460 34.6932 l
S
newpath
150.060 88.0481 m
147.460 88.0481 l
S
newpath
150.060 141.403 m
147.460 141.403 l
S
newpath
150.060 248.112 m
147.460 248.112 l
S
newpath
150.060 301.467 m
147.460 301.467 l
S
newpath
150.060 354.822 m
147.460 354.822 l
S
newpath
150.060 194.757 m
147.460 194.757 l
S
newpath
150.060 381.500 m
150.060 8.01574 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
112 134 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
150.060 381.500 m
144.860 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
131 380 7 13 rc
newpath
141.796 387.437 m
133.203 387.437 l
133.203 386.765 l
141.796 386.765 l
141.796 387.437 l
h
f
Q
newpath
145.953 389.343 m
145.359 391.000 l
140.281 391.000 l
140.281 390.765 l
141.770 389.401 142.820 388.286 143.429 387.421  c
144.039 386.557 144.343 385.770 144.343 385.062  c
144.343 384.510 144.177 384.059 143.843 383.710  c
143.510 383.362 143.109 383.187 142.640 383.187  c
142.224 383.187 141.846 383.309 141.507 383.554  c
141.169 383.799 140.921 384.161 140.765 384.640  c
140.531 384.640 l
140.635 383.859 140.906 383.260 141.343 382.843  c
141.781 382.427 142.328 382.218 142.984 382.218  c
143.682 382.218 144.265 382.442 144.734 382.890  c
145.203 383.338 145.437 383.864 145.437 384.468  c
145.437 384.906 145.333 385.343 145.125 385.781  c
144.812 386.468 144.307 387.192 143.609 387.953  c
142.557 389.109 141.895 389.807 141.625 390.046  c
143.875 390.046 l
144.333 390.046 144.653 390.028 144.835 389.992  c
145.018 389.955 145.184 389.885 145.335 389.781  c
145.487 389.677 145.614 389.531 145.718 389.343  c
145.953 389.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 328.145 m
144.860 328.145 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
131 327 7 13 rc
newpath
141.796 334.437 m
133.203 334.437 l
133.203 333.765 l
141.796 333.765 l
141.796 334.437 l
h
f
Q
newpath
141.531 330.234 m
143.625 329.218 l
143.828 329.218 l
143.828 336.484 l
143.828 336.963 143.849 337.263 143.890 337.382  c
143.932 337.502 144.015 337.593 144.140 337.656  c
144.265 337.718 144.520 337.755 144.906 337.765  c
144.906 338.000 l
141.671 338.000 l
141.671 337.765 l
142.078 337.755 142.341 337.718 142.460 337.656  c
142.580 337.593 142.664 337.510 142.710 337.406  c
142.757 337.302 142.781 336.994 142.781 336.484  c
142.781 331.843 l
142.781 331.208 142.760 330.802 142.718 330.625  c
142.687 330.489 142.632 330.390 142.554 330.328  c
142.476 330.265 142.380 330.234 142.265 330.234  c
142.109 330.234 141.895 330.302 141.625 330.437  c
141.531 330.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 274.790 m
144.860 274.790 l
S
Q
q
newpath
150.060 221.435 m
144.860 221.435 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
141.531 223.234 m
143.625 222.218 l
143.828 222.218 l
143.828 229.484 l
143.828 229.963 143.849 230.263 143.890 230.382  c
143.932 230.502 144.015 230.593 144.140 230.656  c
144.265 230.718 144.520 230.755 144.906 230.765  c
144.906 231.000 l
141.671 231.000 l
141.671 230.765 l
142.078 230.755 142.341 230.718 142.460 230.656  c
142.580 230.593 142.664 230.510 142.710 230.406  c
142.757 230.302 142.781 229.994 142.781 229.484  c
142.781 224.843 l
142.781 224.208 142.760 223.802 142.718 223.625  c
142.687 223.489 142.632 223.390 142.554 223.328  c
142.476 223.265 142.380 223.234 142.265 223.234  c
142.109 223.234 141.895 223.302 141.625 223.437  c
141.531 223.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 168.080 m
144.860 168.080 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
145.953 176.343 m
145.359 178.000 l
140.281 178.000 l
140.281 177.765 l
141.770 176.401 142.820 175.286 143.429 174.421  c
144.039 173.557 144.343 172.770 144.343 172.062  c
144.343 171.510 144.177 171.059 143.843 170.710  c
143.510 170.362 143.109 170.187 142.640 170.187  c
142.224 170.187 141.846 170.309 141.507 170.554  c
141.169 170.799 140.921 171.161 140.765 171.640  c
140.531 171.640 l
140.635 170.859 140.906 170.260 141.343 169.843  c
141.781 169.427 142.328 169.218 142.984 169.218  c
143.682 169.218 144.265 169.442 144.734 169.890  c
145.203 170.338 145.437 170.864 145.437 171.468  c
145.437 171.906 145.333 172.343 145.125 172.781  c
144.812 173.468 144.307 174.192 143.609 174.953  c
142.557 176.109 141.895 176.807 141.625 177.046  c
143.875 177.046 l
144.333 177.046 144.653 177.028 144.835 176.992  c
145.018 176.955 145.184 176.885 145.335 176.781  c
145.487 176.677 145.614 176.531 145.718 176.343  c
145.953 176.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 114.725 m
144.860 114.725 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
140.656 117.031 m
140.906 116.447 141.218 116.000 141.593 115.687  c
141.968 115.375 142.432 115.218 142.984 115.218  c
143.682 115.218 144.213 115.442 144.578 115.890  c
144.859 116.224 145.000 116.578 145.000 116.953  c
145.000 117.588 144.604 118.239 143.812 118.906  c
144.343 119.114 144.744 119.411 145.015 119.796  c
145.286 120.182 145.421 120.635 145.421 121.156  c
145.421 121.895 145.182 122.536 144.703 123.078  c
144.088 123.796 143.197 124.156 142.031 124.156  c
141.447 124.156 141.052 124.083 140.843 123.937  c
140.635 123.791 140.531 123.635 140.531 123.468  c
140.531 123.343 140.580 123.237 140.679 123.148  c
140.778 123.059 140.895 123.015 141.031 123.015  c
141.135 123.015 141.244 123.031 141.359 123.062  c
141.432 123.083 141.596 123.158 141.851 123.289  c
142.106 123.419 142.281 123.500 142.375 123.531  c
142.531 123.572 142.697 123.593 142.875 123.593  c
143.302 123.593 143.677 123.427 144.000 123.093  c
144.322 122.760 144.484 122.364 144.484 121.906  c
144.484 121.572 144.411 121.250 144.265 120.937  c
144.151 120.697 144.026 120.515 143.890 120.390  c
143.713 120.224 143.466 120.072 143.148 119.937  c
142.830 119.802 142.505 119.734 142.171 119.734  c
141.968 119.734 l
141.968 119.531 l
142.302 119.489 142.638 119.369 142.976 119.171  c
143.315 118.974 143.559 118.737 143.710 118.460  c
143.862 118.184 143.937 117.875 143.937 117.531  c
143.937 117.104 143.802 116.755 143.531 116.484  c
143.260 116.213 142.921 116.078 142.515 116.078  c
141.859 116.078 141.312 116.427 140.875 117.125  c
140.656 117.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 61.3706 m
144.860 61.3706 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
146.046 67.8281 m
146.046 68.7343 l
144.890 68.7343 l
144.890 71.0000 l
143.843 71.0000 l
143.843 68.7343 l
140.203 68.7343 l
140.203 67.9218 l
144.203 62.2187 l
144.890 62.2187 l
144.890 67.8281 l
146.046 67.8281 l
h
143.843 67.8281 m
143.843 63.5468 l
140.828 67.8281 l
143.843 67.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
150.060 8.01577 m
144.860 8.01577 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
145.640 9.39062 m
145.140 10.4687 l
142.562 10.4687 l
142.000 11.6250 l
143.114 11.7916 144.000 12.2083 144.656 12.8750  c
145.218 13.4479 145.500 14.1250 145.500 14.9062  c
145.500 15.3645 145.408 15.7864 145.226 16.1718  c
145.044 16.5572 144.812 16.8854 144.531 17.1562  c
144.250 17.4270 143.937 17.6406 143.593 17.7968  c
143.114 18.0364 142.614 18.1562 142.093 18.1562  c
141.583 18.1562 141.210 18.0677 140.976 17.8906  c
140.742 17.7135 140.625 17.5208 140.625 17.3125  c
140.625 17.1875 140.674 17.0807 140.773 16.9921  c
140.872 16.9036 140.994 16.8593 141.140 16.8593  c
141.244 16.8593 141.338 16.8750 141.421 16.9062  c
141.505 16.9375 141.645 17.0260 141.843 17.1718  c
142.166 17.3906 142.489 17.5000 142.812 17.5000  c
143.312 17.5000 143.747 17.3125 144.117 16.9375  c
144.487 16.5625 144.671 16.1041 144.671 15.5625  c
144.671 15.0416 144.505 14.5572 144.171 14.1093  c
143.838 13.6614 143.380 13.3125 142.796 13.0625  c
142.328 12.8750 141.697 12.7656 140.906 12.7343  c
142.562 9.39062 l
145.640 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
